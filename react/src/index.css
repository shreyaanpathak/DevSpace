@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* --------------------------------
   Base layer 
--------------------------------- */
@layer base {
  html {
    font-family: 'Plus Jakarta Sans', system-ui, sans-serif;
    scroll-behavior: smooth; /* Smooth scrolling */
  }

  body {
    @apply antialiased text-gray-900 dark:text-gray-100 transition-colors duration-200;
  }
}

/* --------------------------------
   Components layer
--------------------------------- */
@layer components {
  .btn {
    @apply font-semibold rounded-lg transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98];
  }

  .mockup-code {
    @apply shadow-[0_0_0_1px_rgba(255,255,255,0.1),0_0_30px_rgba(0,0,0,0.3)];
  }

  .navbar {
    @apply transition-all duration-300;
  }
}

/* --------------------------------
   Utilities layer
--------------------------------- */
@layer utilities {
  /* Gradient animation */
  .animate-gradient {
    background-size: 300% 300%;
    animation: gradient 8s linear infinite;
  }
  @keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .animate-pulse-slow {
    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Grid pattern background */
  .bg-grid-pattern {
    background-image:
      linear-gradient(to right, rgb(55 65 81 / 0.1) 1px, transparent 1px),
      linear-gradient(to bottom, rgb(55 65 81 / 0.1) 1px, transparent 1px);
    background-size: 24px 24px;
  }

  .shadow-glow {
    box-shadow: 0 0 20px -5px var(--tw-shadow-color);
  }

  .text-shadow-glow {
    text-shadow: 0 0 20px var(--tw-shadow-color);
  }

  /* Parallax or 3D perspective helpers */
  .perspective-1000 {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  /* Glitch keyframes */
  @keyframes glitch {
    0% { clip-path: inset(0 0 0 0); }
    20% { clip-path: inset(20% 0 0 0); }
    40% { clip-path: inset(40% 0 0 0); }
    60% { clip-path: inset(60% 0 0 0); }
    80% { clip-path: inset(80% 0 0 0); }
    100% { clip-path: inset(100% 0 0 0); }
  }

  .animate-glitch {
    animation: glitch 50ms steps(1) infinite;
  }

  /* Additional radial gradient animations */
  .bg-gradient-radial {
    background-image: radial-gradient(circle at center, var(--tw-gradient-from) 0%, var(--tw-gradient-to) 100%);
  }

  @keyframes moveGradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  @keyframes blob {
    0% { transform: translate(0px, 0px) scale(1); }
    33% { transform: translate(30px, -50px) scale(1.1); }
    66% { transform: translate(-20px, 20px) scale(0.9); }
    100% { transform: translate(0px, 0px) scale(1); }
  }

  /* Hide scrollbar for Chrome, Safari and Opera */
  ::-webkit-scrollbar {
    display: none;
  }
  /* Hide scrollbar for IE, Edge and Firefox */
  * {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;     /* Firefox */
  }
}

/* Enhanced .btn hover "shine" */
.btn {
  @apply relative overflow-hidden transition-all duration-300;
}
.btn:after {
  @apply absolute inset-0 bg-white/20 transform scale-x-0 origin-left transition-transform duration-300;
  content: '';
}
.btn:hover:after {
  @apply scale-x-100;
}

/* Enhanced mockup terminal styling */
.mockup-code {
  @apply relative backdrop-blur-sm bg-opacity-95 shadow-2xl overflow-hidden;
}
.mockup-code::before {
  content: '';
  @apply absolute inset-0 bg-gradient-to-br from-primary/5 to-purple-500/5 opacity-50;
}

/* In your global styles, or an imported .css file. */

/* Basic highlight for remote selections */
.remoteSelection {
  background-color: rgba(255, 200, 0, 0.2) !important;
  /* You could also change this color dynamically if you generate unique classes per user. */
}

/* Optional: if you want a label floating at the cursor. 
   Make sure to uncomment "afterContentClassName" in the decoration. */
.remoteSelectionLabel::after {
  content: "Remote User"; /* Or use a data-attribute approach to show the actual name. */
  position: relative;
  top: -2px;
  margin-left: 4px;
  background-color: #1e1e1e;
  color: #fff;
  border-radius: 4px;
  padding: 2px 6px;
  font-size: 12px;
  /* Optional: add a little box-shadow, etc. */
  box-shadow: 0 1px 3px rgba(0,0,0,0.4);
}
.clip-hexagon {
  clip-path: polygon(50% 0%, 93% 25%, 93% 75%, 50% 100%, 7% 75%, 7% 25%);
}
